<div class="sidebar" id="sidebar">
  <div class="logo">
    <h2>
      <i class='bx bx-menu' id="menu-toggle"></i>
      <span class="app-name">MonApp</span>
    </h2>
  </div>
  <ul class="nav-links">
      <li><a href="/navigationadmin/adminbord"><i class="bx bx-home"></i><span>Tableau de bord</span></a></li>
      <li>
          <a href="/navigationadmin/consultedemande">
              <i class="bx bx-list-ul"></i>
              <span>Consulter les demandes</span>
              <span class="sidebar-badge" id="sidebarNewDemandeBadge"></span>
          </a>
      </li>
      <li><a href="/navigationadmin/statadmin"><i class="bx bx-stats"></i><span>Statistiques des absences</span></a></li>
      <li><a href="/navigationadmin/typeconge"><i class="bx bx-cog"></i><span>Gérer les types de congés</span></a></li>
      <li><a href="/navigationadmin/gestionsolde"><i class="bx bx-cog"></i><span>Solde de congés</span></a></li>
      <li>
        <a href="/navigationadmin/notificationadmin">
          <i class='bx bx-bell'></i>
          <span>Notifications</span>
          <span class="sidebar-badge" id="sidebarNotificationBadge"></span>
        </a>
      </li>      
      <li><a href="#"><i class="bx bx-file"></i><span>Exporter les historiques</span></a></li>
      <li><a href="/deconnexion"><i class="bx bx-log-out"></i><span>Déconnexion</span></a></li>
  </ul>
</div>

<style>
  /* Style de base pour les badges */
/* Style pour le badge des nouvelles demandes */
.sidebar-badge {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    background-color: #ff9800;
    color: white;
    border-radius: 10px;
    padding: 2px 6px;
    font-size: 10px;
    font-weight: bold;
    display: none;
}

/* Style pour le lien avec badge */
.nav-links li a.has-badge {
    position: relative;
}
@keyframes pulse {
        0% { box-shadow: 0 0 0 0 rgba(255, 152, 0, 0.4); }
        70% { box-shadow: 0 0 0 10px rgba(255, 152, 0, 0); }
        100% { box-shadow: 0 0 0 0 rgba(255, 152, 0, 0); }
    }
.new-badge {
    animation: pulse 1.5s ease-in-out infinite;
}
</style>

<script>
  // --- Mise à jour badge des nouvelles demandes ---
  function updateSidebarNewDemandeBadge(count) {
    const badge = document.getElementById('sidebarNewDemandeBadge');
    const link = badge.closest('a');

    if (count > 0) {
      badge.textContent = count;
      badge.style.display = 'inline-block';
      badge.classList.add('new-badge');
      if (link) link.classList.add('has-badge');
    } else {
      badge.style.display = 'none';
      badge.classList.remove('new-badge');
      if (link) link.classList.remove('has-badge');
    }
  }

  function fetchNewDemandesCount() {
    fetch('/navigationadmin/get-demandes-count')
      .then(response => response.json())
      .then(data => {
        if (data.newDemandesCount !== undefined) {
          updateSidebarNewDemandeBadge(data.newDemandesCount);
        }
      })
      .catch(error => console.error('Erreur lors de la mise à jour du badge des demandes :', error));
  }

  // --- Mise à jour badge des notifications ---
  function updateSidebarNotificationBadge(count) {
    const badge = document.getElementById('sidebarNotificationBadge');
    const link = badge.closest('a');

    if (count > 0) {
      badge.textContent = count;
      badge.style.display = 'inline-block';
      badge.classList.add('new-badge');
      if (link) link.classList.add('has-badge');
    } else {
      badge.style.display = 'none';
      badge.classList.remove('new-badge');
      if (link) link.classList.remove('has-badge');
    }
  }

  function fetchNotificationCount() {
    fetch('/navigationadmin/get-notifications-count')
      .then(response => response.json())
      .then(data => {
        if (data.notificationCount !== undefined) {
          updateSidebarNotificationBadge(data.notificationCount);
        }
      })
      .catch(error => console.error('Erreur lors de la mise à jour du badge des notifications :', error));
  }

  // --- Initialisation automatique ---
  document.addEventListener('DOMContentLoaded', () => {
    fetchNewDemandesCount();
    fetchNotificationCount();
    setInterval(fetchNewDemandesCount, 1000); // toutes les secondes
    setInterval(fetchNotificationCount, 1000);
  });
</script>

